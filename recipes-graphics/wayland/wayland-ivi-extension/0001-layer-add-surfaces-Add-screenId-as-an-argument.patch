From 0a368e3d65f3f3cbe193e9e4c6b7b7ddf4ec7b54 Mon Sep 17 00:00:00 2001
From: Ramprasad N <x0038811@ti.com>
Date: Thu, 20 Apr 2017 13:24:20 +0530
Subject: [PATCH 1/2] layer-add-surfaces: Add screenId as an argument

Add Screen_ID as a argument to handle multiple screens.
Removed choose_screen function as it is redundant
after this change

Signed-off-by: Ramprasad N <x0038811@ti.com>
Reviewed-by: Karthik Ramanan <a0393906@ti.com>
---
 .../layer-add-surfaces/src/layer-add-surfaces.c    | 47 +++++-----------------
 1 file changed, 11 insertions(+), 36 deletions(-)

diff --git a/ivi-layermanagement-examples/layer-add-surfaces/src/layer-add-surfaces.c b/ivi-layermanagement-examples/layer-add-surfaces/src/layer-add-surfaces.c
index aaff7de..46d7d15 100644
--- a/ivi-layermanagement-examples/layer-add-surfaces/src/layer-add-surfaces.c
+++ b/ivi-layermanagement-examples/layer-add-surfaces/src/layer-add-surfaces.c
@@ -32,6 +32,7 @@
 
 t_ilm_uint screenWidth;
 t_ilm_uint screenHeight;
+t_ilm_uint screen_ID;
 t_ilm_uint layer;
 pthread_mutex_t mutex;
 static pthread_cond_t  waiterVariable = PTHREAD_COND_INITIALIZER;
@@ -91,48 +92,20 @@ static void callbackFunction(ilmObjectType object, t_ilm_uint id, t_ilm_bool cre
     }
 }
 
-/* Choose the display with the largest resolution.*/
-static t_ilm_uint choose_screen(void)
+int main (int argc, const char * argv[])
 {
     struct ilmScreenProperties screenProperties;
-    t_ilm_uint* screen_IDs = NULL;
-    t_ilm_uint screen_ID = 0;
-    t_ilm_uint screen_count = NULL;
-    t_ilm_uint choosen_width = 0;
-    t_ilm_uint choosen_height = 0;
-    int i;
-
-    ilm_getScreenIDs(&screen_count, &screen_IDs);
-
-    for (i = 0; i<screen_count; i++)
-    {
-        ilm_getPropertiesOfScreen(screen_IDs[i], &screenProperties);
-        if (screenProperties.screenWidth > choosen_width) {
-            choosen_width = screenProperties.screenWidth;
-            choosen_height = screenProperties.screenHeight;
-            screen_ID = screen_IDs[i];
-        }
-    }
 
-    screenWidth = choosen_width;
-    screenHeight = choosen_height;
-
-    free(screen_IDs);
-
-    return screen_ID;
-}
-
-int main (int argc, const char * argv[])
-{
     // Get command-line options
-    if ( argc != 3) {
-        printf("Call layer-add-surface <layerID> <number_of_surfaces>\n");
+    if ( argc != 4) {
+        printf("Call layer-add-surface <screenID> <layerID> <number_of_surfaces>\n");
         return -1;
     }
 
-    layer = strtol(argv[1], NULL, 0);
+    screen_ID = strtol(argv[1], NULL, 0);
+    layer = strtol(argv[2], NULL, 0);
 
-    number_of_surfaces = strtol(argv[2], NULL, 0);
+    number_of_surfaces = strtol(argv[3], NULL, 0);
 
     pthread_mutexattr_t a;
     if (pthread_mutexattr_init(&a) != 0)
@@ -156,11 +129,13 @@ int main (int argc, const char * argv[])
     pthread_mutexattr_destroy(&a);
 
     t_ilm_layer renderOrder[1];
-    t_ilm_uint screen_ID;
     renderOrder[0] = layer;
     ilm_init();
 
-    screen_ID = choose_screen();
+    ilm_getPropertiesOfScreen(screen_ID, &screenProperties);
+    screenWidth = screenProperties.screenWidth;
+    screenHeight = screenProperties.screenHeight;
+    printf("GetPropertiesOfScreen: screen ID (%d), Width (%u), Height (%u)\n", screen_ID, screenWidth, screenHeight);
     ilm_layerCreateWithDimension(&layer, screenWidth, screenHeight);
     printf("CreateWithDimension: layer ID (%d), Width (%u), Height (%u)\n", layer, screenWidth, screenHeight);
     ilm_layerSetVisibility(layer,ILM_TRUE);
-- 
1.9.1

